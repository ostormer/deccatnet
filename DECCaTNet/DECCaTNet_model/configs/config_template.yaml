# This is a template for how config files should look, all parameters are in cronological order of use
# All boolean variables are in UPPERCASE lettering
global:
  PREPROCESSING: False
  PRE_TRAINING: False
  FINE_TUNING: True

  n_jobs: 2
  random_state: null # remeber null and not None

  n_channels: 3
  s_freq: 200
  embedding_size: 40
  magic_constant: 49 #TODO find a way to fix this

  datasets: ['tuh_eeg', 'tuh_eeg_abnormal']

directory:
  tuh_eeg_abnormal:
    # Loaded if local_load: True
    dataset_root: 'C:\Users\Styrk\OneDrive - NTNU\Documents\Skole\Master\master_code\master-eeg-trans\datasets\TUH\tuh_eeg_abnormal'
    cache_dir: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/TUH-pickles_abnormal'
    save_dir: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/preprocessed_abnormal/step_1'
    save_dir_2: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/preprocessed_abnormal/step_2'
  'tuh_eeg':
    # Loaded if local_load: False
    dataset_root: 'C:\Users\Styrk\OneDrive - NTNU\Documents\Skole\Master\master_code\master-eeg-trans\datasets\TUH\tuh_eeg'
    cache_dir: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/TUH-pickles'
    save_dir: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/preprocessed/step_1'
    save_dir_2: 'C:/Users/Styrk/OneDrive - NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/preprocessed/step_2'

preprocess:
  tuh_eeg_abnormal:
    source_ds: 'tuh_eeg_abnormal'  # allowed one of ['tuh_eeg_abnormal', 'tuh_eeg']
    start_idx: 0
    stop_idx: -1
    IS_FINE_TUNING_DS: False
    read_cache: 'none'  # Read pickled dataset or generate new. Allowed ['none', 'raw', 'windows', 'preproc', 'split']

    window_size: 60  # Window length in seconds
    channel_select_function: 'adjacent_groups'  # How to select pairs of channels to keep
    crop_min: -700
    crop_max: 700
    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak
    DELETE_STEP_1: True
    #exclude_channels: # remember to acomment out if not used
  tuh_eeg:
    source_ds: 'tuh_eeg'  # allowed one of ['tuh_eeg_abnormal', 'tuh_eeg']
    start_idx: 0
    stop_idx: -1
    IS_FINE_TUNING_DS: False
    read_cache: 'none'  # Read pickled dataset or generate new. Allowed ['none', 'raw', 'windows', 'preproc', 'split']

    window_size: 60  # Window length in seconds
    channel_select_function: 'adjacent_groups'  # How to select pairs of channels to keep
    crop_min: -800
    crop_max: 800
    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak
    DELETE_STEP_1: True
    #exclude_channels: # remember to acomment out if not used


pre_training:
  tuh_eeg:
    ds_path: '../datasets/TUH/preprocessed/step_2'
    ids_path: '../datasets/TUH/TUH-pickles/split_idx_list.pkl'
  tuh_eeg_abnormal:
    ds_path: '../datasets/TUH/preprocessed_abnormal/step_2'
    ids_path: '../datasets/TUH/TUH-pickles_abnormal/split_idx_list.pkl'

  pretrained_model_path: null # this is the path of an already pretrained model which you wish to continue training (remember null)

  batch_size: 16
  train_split: 0.01
  SHUFFLE: True
  temperature: 1 # Temperature of normalized temeprature contrastive loss
  learning_rate: 0.1
  weight_decay: 0.01
  max_epochs: 2

  save_freq: 1
  batch_print_freq: 5
  save_dir_model: 'models' # directory which you wish to store your model to
  model_file_name: 'test' # Name of your model
  TIME_PROCESS: False

  augmentation:
    noise_probability: 0

fine_tuning:
  ds_name: 'tuh_eeg_abnormal'
  # get encoder path from pre_training params
  ds_path: '../datasets/TUH/TUH-pickles_abnormal/windowed_ds.pkl'
  encoder_path: 'models/encoder_test'

  n_classes: 2

  batch_size: 124
  max_epochs: 3
  lr_rate: 0.01
  weight_decay: 0.005
  train_split: 0.7
  SHUFFLE: True

  PERFORM_KFOLD: True
  n_folds: 5

  early_stopper: #params for early stopper implementation
    patience: 4
    min_delta: 0.1

  save_dir_model: 'models_fine_tune' # directory which you wish to store your model to
  model_file_name: 'test' # Name of your model

  REDO_PREPROCESS: True # this must allways be true, as preprocessing allways have to be done before pretraining.
  fine_tuning_preprocess:
    source_ds: 'tuh_eeg_abnormal'  # allowed one of ['tuh_eeg_abnormal', 'tuh_eeg', Add more here]
    start_idx: 0
    stop_idx: -1
    IS_FINE_TUNING_DS: True
    read_cache: 'none'  # needs to be none if new channels are excluded

    window_size: 60  # Window length in seconds, if going to change need to do 'none' above
    channel_select_function: 'adjacent_groups'  # How to select pairs of channels to keep
    crop_min: -800
    crop_max: 800
    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak
    DELETE_STEP_1: False
    exclude_channels:
    - 'EEG 26-REF'
    - 'EEG 27-REF'
    - 'EEG 28-REF'
    - 'EEG 29-REF'
    - 'EEG 30-REF'

encoder_params:
  temporal_size: 40
  spatial_size: 40
  CNN_dropout: 0.5

  n_encoder_heads: 10
  n_encoder_layers: 6

  latent_space_size: 64

downstream_params:
  out_layer_1: 256
  out_layer_2: 64
  dropout_1: 0.5
  dropout_2: 0.3












