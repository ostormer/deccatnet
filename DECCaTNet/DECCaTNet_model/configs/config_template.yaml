# This is a template for how config files should look, all parameters are in chronological order of use
# All boolean variables are in UPPERCASE lettering
global:
  PREPROCESSING: False
  HYPER_SEARCH: True
  PRE_TRAINING: False
  FINE_TUNING: False

  n_jobs: 4
  random_state: null # remember null and not None

  n_channels: 3
  channel_select_function: 'adjacent_groups'  # How to select pairs of channels to keep
  s_freq: 200
  window_size: 60  # Window length in seconds
  embedding_size: 40
  magic_constant: 49 #TODO find a way to fix this

  datasets: ['tuh_eeg', 'tuh_eeg_abnormal'] # which datasets should be used for pre_training

preprocess:
  tuh_eeg_abnormal:  # This key must match the one value in params_all['global']['datasets']
    ds_name: 'tuh_eeg_abnormal'  # Must match key
    dataset_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg_abnormal/v3.0.0/edf/train'
    preprocess_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg_abnormal_preprocessed'
    IS_FINE_TUNING_DS: False

    start_idx: 0
    stop_idx: null  # Which idx is the last to load? (null for all)
    read_cache: 'none'  # Read pickled dataset or generate new. Allowed ['none', 'raw', 'windows', 'preproc', 'split']

    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this (V)
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak (V)
    DELETE_STEP_1: True
    exclude_channels: []  # remember to comment out if not used

  tuh_eeg:
    ds_name: 'tuh_eeg'  # Must match key
    dataset_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg'
    preprocess_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg_preprocessed'
    IS_FINE_TUNING_DS: False

    start_idx: 0
    stop_idx: null # Which idx is the last to load? (null for all)
    read_cache: 'none'  # Read pickled dataset or generate new. Allowed ['none', 'raw', 'windows', 'preproc', 'split']

    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this (V)
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak (V)
    DELETE_STEP_1: True
    exclude_channels: []  # remember to comment out if not used


pre_training:
  tuh_eeg:
    ds_path: '../datasets/TUH/tuh_eeg_preprocessed/split'
    ids_path: '../datasets/TUH/tuh_eeg_preprocessed/pickles/split_idx_list.pkl'
  tuh_eeg_abnormal:
    ds_path: '../datasets/TUH/tuh_eeg_abnormal_preprocessed/split'
    ids_path: '../datasets/TUH/tuh_eeg_abnormal_preprocessed/pickles/split_idx_list.pkl'

  pretrained_model_path: null # this is the path of an already pretrained model which you wish to continue training (remember null)

  batch_size: 16
  train_split: 0.01
  SHUFFLE: True
  temperature: 1 # Temperature of normalized temperature contrastive loss
  learning_rate: 0.1
  weight_decay: 0.01
  max_epochs: 2

  save_freq: 1
  batch_print_freq: 5
  save_dir_model: 'models' # directory which you wish to store your model to
  model_file_name: 'test' # Name of your model
  TIME_PROCESS: False

  augmentation:
    noise_probability: 0


fine_tuning:
  ds_name: 'tuh_eeg_abnormal'
  # get encoder path from pre_training params
  ds_path: '../datasets/TUH/tuh_eeg_abnormal_preprocessed_finetune/pickles/windowed_ds.pkl'
  encoder_path: 'models/encoder_test'

  n_classes: 2

  batch_size: 124
  max_epochs: 3
  lr_rate: 0.01
  weight_decay: 0.005
  train_split: 0.7
  SHUFFLE: True

  PERFORM_KFOLD: True
  n_folds: 5

  early_stopper: #params for early stopper implementation
    patience: 4
    min_delta: 0.1

  save_dir_model: 'models_fine_tune' # directory which you wish to store your model to
  model_file_name: 'test' # Name of your model

  REDO_PREPROCESS: True # this must allways be true, as preprocessing always have to be done before pretraining.
  fine_tuning_preprocess:
    ds_name: 'tuh_eeg_abnormal'
    dataset_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg_abnormal/v3.0.0/edf/train'
    preprocess_root: 'C:/Users/Styrk/OneDrive-NTNU/Documents/Skole/Master/master_code/master-eeg-trans/datasets/TUH/tuh_eeg_abnormal_preprocessed_finetune'
    IS_FINE_TUNING_DS: True

    start_idx: 0
    stop_idx: 10  # Which idx is the last to load? (null for all)
    read_cache: 'none'  # needs to be none if new channels are excluded, else windows is acceptable

    bandpass_lo: 0.3
    bandpass_hi: 80
    scaling_factor: 1000000  # Scaling factor to convert to microVolts
    reject_high_threshold: 0.008  # Reject windows with higher peak-to-peak than this (V)
    reject_flat_threshold: 0.000001  # Reject windows flatter than this peak-to-peak (V)
    DELETE_STEP_1: False
    exclude_channels:
    - 'EEG 26-REF'
    - 'EEG 27-REF'
    - 'EEG 28-REF'
    - 'EEG 29-REF'
    - 'EEG 30-REF'

encoder_params:
  temporal_size: 40
  spatial_size: 40
  CNN_dropout: 0.5

  n_encoder_heads: 10
  n_encoder_layers: 6

  latent_space_size: 64

downstream_params:
  out_layer_1: 256
  out_layer_2: 64
  dropout_1: 0.5
  dropout_2: 0.3

hyper_search:
  PREPROCESS: True
  FINE_AND_PRE: True # Need to know which one has parameter changes, both can't have
  PRE_TRAINING: False
  FINE_TUNING: True
  max_t: 10

  config:
    n_channels: 'tune.choice([2,3,4,5])'
    batch_size: 'tune.choice([16,32,128])'
    lr_rate: 'tune.loguniform(1e-4, 1e-1)'


  inspiration:
    l1: 'tune.sample_from(lambda _: 2 ** np.random.randint(2, 9))'
    l2: 'tune.sample_from(lambda _: 2 ** np.random.randint(2, 9))'
    lr: 'tune.loguniform(1e-4, 1e-1)'
    batch_size: 'tune.choice([2, 4, 8, 16])'
